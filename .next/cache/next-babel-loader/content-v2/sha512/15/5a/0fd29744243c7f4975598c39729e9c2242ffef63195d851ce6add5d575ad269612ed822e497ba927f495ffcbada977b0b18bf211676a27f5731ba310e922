{"ast":null,"code":"var _jsxFileName = \"/Users/roberthawker/Desktop/moods/pages/[id]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport dbConnect from '../../utils/dbConnect';\nimport Pet from '../../models/Pet';\n/* Allows you to view pet card info and delete pet card*/\n\nconst PetPage = ({\n  pet\n}) => {\n  const router = useRouter();\n  const {\n    0: message,\n    1: setMessage\n  } = useState('');\n\n  const handleDelete = async () => {\n    const petID = router.query.id;\n\n    try {\n      await fetch(`/api/pets/${petID}`, {\n        method: 'Delete'\n      });\n      router.push('/');\n    } catch (error) {\n      setMessage('Failed to delete the pet.');\n    }\n  };\n\n  return __jsx(\"div\", {\n    key: pet._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: pet.image_url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(\"h5\", {\n    className: \"pet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, pet.name), __jsx(\"div\", {\n    className: \"main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"pet-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, pet.name), __jsx(\"p\", {\n    className: \"owner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Owner: \", pet.owner_name), __jsx(\"div\", {\n    className: \"likes info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Likes\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, pet.likes.map((data, index) => __jsx(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, data, \" \")))), __jsx(\"div\", {\n    className: \"dislikes info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Dislikes\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, pet.dislikes.map((data, index) => __jsx(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, data, \" \")))), __jsx(\"div\", {\n    className: \"dislikes info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Diet\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, pet.diet.map((data, index) => __jsx(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, data, \" \")))), __jsx(\"div\", {\n    className: \"btn-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/[id]/edit\",\n    as: `/${pet._id}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"btn edit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Edit\")), __jsx(\"button\", {\n    className: \"btn delete\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Delete\")))), message && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, message));\n};\n\nexport async function getServerSideProps({\n  params\n}) {\n  await dbConnect();\n  const pet = await Pet.findById(params.id).lean();\n  pet._id = pet._id.toString();\n  return {\n    props: {\n      pet\n    }\n  };\n}\nexport default PetPage;","map":{"version":3,"sources":["/Users/roberthawker/Desktop/moods/pages/[id]/index.js"],"names":["useState","useRouter","Link","dbConnect","Pet","PetPage","pet","router","message","setMessage","handleDelete","petID","query","id","fetch","method","push","error","_id","image_url","name","owner_name","likes","map","data","index","dislikes","diet","getServerSideProps","params","findById","lean","toString","props"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA;;AACA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAC3B,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBT,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMU,YAAY,GAAG,YAAY;AAC/B,UAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAP,CAAaC,EAA3B;;AAEA,QAAI;AACF,YAAMC,KAAK,CAAE,aAAYH,KAAM,EAApB,EAAuB;AAChCI,QAAAA,MAAM,EAAE;AADwB,OAAvB,CAAX;AAGAR,MAAAA,MAAM,CAACS,IAAP,CAAY,GAAZ;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdR,MAAAA,UAAU,CAAC,2BAAD,CAAV;AACD;AACF,GAXD;;AAaA,SACE;AAAK,IAAA,GAAG,EAAEH,GAAG,CAACY,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEZ,GAAG,CAACa,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0Bb,GAAG,CAACc,IAA9B,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBd,GAAG,CAACc,IAA7B,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA6Bd,GAAG,CAACe,UAAjC,CAFF,EAKE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,GAAG,CAACgB,KAAJ,CAAUC,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,KACb;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,IAAjB,MADD,CADH,CAFF,CALF,EAaE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,GAAG,CAACoB,QAAJ,CAAaH,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAChB;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,IAAjB,MADD,CADH,CAFF,CAbF,EAqBE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,GAAG,CAACqB,IAAJ,CAASJ,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KACZ;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,IAAjB,MADD,CADH,CAFF,CArBF,EA8BE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAwB,IAAA,EAAE,EAAG,IAAGlB,GAAG,CAACY,GAAI,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAER,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CA9BF,CAHF,CADF,EA4CGF,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAJ,CA5Cd,CADF;AAgDD,CAhED;;AAkEA,OAAO,eAAeoB,kBAAf,CAAkC;AAAEC,EAAAA;AAAF,CAAlC,EAA8C;AACnD,QAAM1B,SAAS,EAAf;AAEA,QAAMG,GAAG,GAAG,MAAMF,GAAG,CAAC0B,QAAJ,CAAaD,MAAM,CAAChB,EAApB,EAAwBkB,IAAxB,EAAlB;AACAzB,EAAAA,GAAG,CAACY,GAAJ,GAAUZ,GAAG,CAACY,GAAJ,CAAQc,QAAR,EAAV;AAEA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAE3B,MAAAA;AAAF;AAAT,GAAP;AACD;AAED,eAAeD,OAAf","sourcesContent":["import { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport Link from 'next/link'\nimport dbConnect from '../../utils/dbConnect'\nimport Pet from '../../models/Pet'\n\n/* Allows you to view pet card info and delete pet card*/\nconst PetPage = ({ pet }) => {\n  const router = useRouter()\n  const [message, setMessage] = useState('')\n  const handleDelete = async () => {\n    const petID = router.query.id\n\n    try {\n      await fetch(`/api/pets/${petID}`, {\n        method: 'Delete',\n      })\n      router.push('/')\n    } catch (error) {\n      setMessage('Failed to delete the pet.')\n    }\n  }\n\n  return (\n    <div key={pet._id}>\n      <div className=\"card\">\n        <img src={pet.image_url} />\n        <h5 className=\"pet-name\">{pet.name}</h5>\n        <div className=\"main-content\">\n          <p className=\"pet-name\">{pet.name}</p>\n          <p className=\"owner\">Owner: {pet.owner_name}</p>\n\n          {/* Extra Pet Info: Likes and Dislikes */}\n          <div className=\"likes info\">\n            <p className=\"label\">Likes</p>\n            <ul>\n              {pet.likes.map((data, index) => (\n                <li key={index}>{data} </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"dislikes info\">\n            <p className=\"label\">Dislikes</p>\n            <ul>\n              {pet.dislikes.map((data, index) => (\n                <li key={index}>{data} </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"dislikes info\">\n            <p className=\"label\">Diet</p>\n            <ul>\n              {pet.diet.map((data, index) => (\n                <li key={index}>{data} </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"btn-container\">\n            <Link href=\"/[id]/edit\" as={`/${pet._id}/edit`}>\n              <button className=\"btn edit\">Edit</button>\n            </Link>\n            <button className=\"btn delete\" onClick={handleDelete}>\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n      {message && <p>{message}</p>}\n    </div>\n  )\n}\n\nexport async function getServerSideProps({ params }) {\n  await dbConnect()\n\n  const pet = await Pet.findById(params.id).lean()\n  pet._id = pet._id.toString()\n\n  return { props: { pet } }\n}\n\nexport default PetPage\n"]},"metadata":{},"sourceType":"module"}