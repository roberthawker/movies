{"ast":null,"code":"import _regeneratorRuntime from \"/Users/roberthawker/Desktop/moods/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/roberthawker/Desktop/moods/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport mongoose from 'mongoose';\n\nfunction dbConnect() {\n  return _dbConnect.apply(this, arguments);\n}\n\nfunction _dbConnect() {\n  _dbConnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(mongoose.connection.readyState >= 1)) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            return _context.abrupt(\"return\", mongoose.connect(process.env.MONGODB_URI, {\n              useNewUrlParser: true,\n              useUnifiedTopology: true,\n              useFindAndModify: false,\n              useCreateIndex: true\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _dbConnect.apply(this, arguments);\n}\n\nexport default dbConnect;","map":{"version":3,"sources":["/Users/roberthawker/Desktop/moods/utils/dbConnect.js"],"names":["mongoose","dbConnect","connection","readyState","connect","process","env","MONGODB_URI","useNewUrlParser","useUnifiedTopology","useFindAndModify","useCreateIndex"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,UAArB;;SAEeC,S;;;;;wEAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGMD,QAAQ,CAACE,UAAT,CAAoBC,UAApB,IAAkC,CAHxC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,6CAOSH,QAAQ,CAACI,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,WAA7B,EAA0C;AAC/CC,cAAAA,eAAe,EAAE,IAD8B;AAE/CC,cAAAA,kBAAkB,EAAE,IAF2B;AAG/CC,cAAAA,gBAAgB,EAAE,KAH6B;AAI/CC,cAAAA,cAAc,EAAE;AAJ+B,aAA1C,CAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAeA,eAAeV,SAAf","sourcesContent":["import mongoose from 'mongoose'\n\nasync function dbConnect() {\n  // check if we have a connection to the database or if it's currently\n  // connecting or disconnecting (readyState 1, 2 and 3)\n  if (mongoose.connection.readyState >= 1) {\n    return\n  }\n\n  return mongoose.connect(process.env.MONGODB_URI, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useFindAndModify: false,\n    useCreateIndex: true,\n  })\n}\n\nexport default dbConnect\n"]},"metadata":{},"sourceType":"module"}