{"ast":null,"code":"var _jsxFileName = \"/Users/roberthawker/Desktop/moods/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport dbConnect from '../utils/dbConnect';\nimport Pet from '../models/Pet';\n\nconst Index = ({\n  pets\n}) => __jsx(React.Fragment, null, pets.map(pet => __jsx(\"div\", {\n  key: pet._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }\n}, __jsx(\"div\", {\n  className: \"card\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }\n}, __jsx(\"img\", {\n  src: pet.image_url,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 11\n  }\n}), __jsx(\"h5\", {\n  className: \"pet-name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 11\n  }\n}, pet.name), __jsx(\"div\", {\n  className: \"main-content\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }\n}, __jsx(\"p\", {\n  className: \"pet-name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n}, pet.name), __jsx(\"p\", {\n  className: \"owner\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }\n}, \"Owner: \", pet.owner_name), __jsx(\"div\", {\n  className: \"likes info\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 13\n  }\n}, __jsx(\"p\", {\n  className: \"label\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 15\n  }\n}, \"Likes\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 15\n  }\n}, pet.likes.map((data, index) => __jsx(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 19\n  }\n}, data, \" \")))), __jsx(\"div\", {\n  className: \"dislikes info\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }\n}, __jsx(\"p\", {\n  className: \"label\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 15\n  }\n}, \"Dislikes\"), __jsx(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 15\n  }\n}, pet.dislikes.map((data, index) => __jsx(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 19\n  }\n}, data, \" \")))), __jsx(\"div\", {\n  className: \"btn-container\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }\n}, __jsx(Link, {\n  href: \"/[id]/edit\",\n  as: `/${pet._id}/edit`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 15\n  }\n}, __jsx(\"button\", {\n  className: \"btn edit\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 17\n  }\n}, \"Edit\")), __jsx(Link, {\n  href: \"/[id]\",\n  as: `/${pet._id}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 15\n  }\n}, __jsx(\"button\", {\n  className: \"btn view\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 17\n  }\n}, \"View\"))))))));\n/* Retrieves pet(s) data from mongodb database */\n\n\nexport async function getServerSideProps() {\n  await dbConnect();\n  /* find all the data in our database */\n\n  const result = await Pet.find({});\n  const pets = result.map(doc => {\n    const pet = doc.toObject();\n    pet._id = pet._id.toString();\n    return pet;\n  });\n  return {\n    props: {\n      pets: pets\n    }\n  };\n}\nexport default Index;","map":{"version":3,"sources":["/Users/roberthawker/Desktop/moods/pages/index.js"],"names":["Link","dbConnect","Pet","Index","pets","map","pet","_id","image_url","name","owner_name","likes","data","index","dislikes","getServerSideProps","result","find","doc","toObject","toString","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACZ,4BAEGA,IAAI,CAACC,GAAL,CAAUC,GAAD,IACR;AAAK,EAAA,GAAG,EAAEA,GAAG,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAED,GAAG,CAACE,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAI,EAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA0BF,GAAG,CAACG,IAA9B,CAFF,EAGE;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAyBH,GAAG,CAACG,IAA7B,CADF,EAEE;AAAG,EAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA6BH,GAAG,CAACI,UAAjC,CAFF,EAKE;AAAK,EAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGJ,GAAG,CAACK,KAAJ,CAAUN,GAAV,CAAc,CAACO,IAAD,EAAOC,KAAP,KACb;AAAI,EAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAiBD,IAAjB,MADD,CADH,CAFF,CALF,EAaE;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGN,GAAG,CAACQ,QAAJ,CAAaT,GAAb,CAAiB,CAACO,IAAD,EAAOC,KAAP,KAChB;AAAI,EAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAiBD,IAAjB,MADD,CADH,CAFF,CAbF,EAsBE;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,YAAX;AAAwB,EAAA,EAAE,EAAG,IAAGN,GAAG,CAACC,GAAI,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAQ,EAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,EAIE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,OAAX;AAAmB,EAAA,EAAE,EAAG,IAAGD,GAAG,CAACC,GAAI,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAQ,EAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAJF,CAtBF,CAHF,CADF,CADD,CAFH,CADF;AA6CA;;;AACA,OAAO,eAAeQ,kBAAf,GAAoC;AACzC,QAAMd,SAAS,EAAf;AAEA;;AACA,QAAMe,MAAM,GAAG,MAAMd,GAAG,CAACe,IAAJ,CAAS,EAAT,CAArB;AACA,QAAMb,IAAI,GAAGY,MAAM,CAACX,GAAP,CAAYa,GAAD,IAAS;AAC/B,UAAMZ,GAAG,GAAGY,GAAG,CAACC,QAAJ,EAAZ;AACAb,IAAAA,GAAG,CAACC,GAAJ,GAAUD,GAAG,CAACC,GAAJ,CAAQa,QAAR,EAAV;AACA,WAAOd,GAAP;AACD,GAJY,CAAb;AAMA,SAAO;AAAEe,IAAAA,KAAK,EAAE;AAAEjB,MAAAA,IAAI,EAAEA;AAAR;AAAT,GAAP;AACD;AAED,eAAeD,KAAf","sourcesContent":["import Link from 'next/link'\nimport dbConnect from '../utils/dbConnect'\nimport Pet from '../models/Pet'\n\nconst Index = ({ pets }) => (\n  <>\n    {/* Create a card for each pet */}\n    {pets.map((pet) => (\n      <div key={pet._id}>\n        <div className=\"card\">\n          <img src={pet.image_url} />\n          <h5 className=\"pet-name\">{pet.name}</h5>\n          <div className=\"main-content\">\n            <p className=\"pet-name\">{pet.name}</p>\n            <p className=\"owner\">Owner: {pet.owner_name}</p>\n\n            {/* Extra Pet Info: Likes and Dislikes */}\n            <div className=\"likes info\">\n              <p className=\"label\">Likes</p>\n              <ul>\n                {pet.likes.map((data, index) => (\n                  <li key={index}>{data} </li>\n                ))}\n              </ul>\n            </div>\n            <div className=\"dislikes info\">\n              <p className=\"label\">Dislikes</p>\n              <ul>\n                {pet.dislikes.map((data, index) => (\n                  <li key={index}>{data} </li>\n                ))}\n              </ul>\n            </div>\n\n            <div className=\"btn-container\">\n              <Link href=\"/[id]/edit\" as={`/${pet._id}/edit`}>\n                <button className=\"btn edit\">Edit</button>\n              </Link>\n              <Link href=\"/[id]\" as={`/${pet._id}`}>\n                <button className=\"btn view\">View</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    ))}\n  </>\n)\n\n/* Retrieves pet(s) data from mongodb database */\nexport async function getServerSideProps() {\n  await dbConnect()\n\n  /* find all the data in our database */\n  const result = await Pet.find({})\n  const pets = result.map((doc) => {\n    const pet = doc.toObject()\n    pet._id = pet._id.toString()\n    return pet\n  })\n\n  return { props: { pets: pets } }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}