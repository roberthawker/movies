{"ast":null,"code":"var _jsxFileName = \"/Users/roberthawker/Desktop/moods/pages/index.js\",\n    _this = this;\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\n\nvar Index = function Index(_ref) {\n  var movies = _ref.movies;\n  return __jsx(React.Fragment, null, movies.map(function (movie) {\n    return __jsx(\"div\", {\n      key: movie._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }, __jsx(\"img\", {\n      src: movie.poster,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }), __jsx(\"h5\", {\n      className: \"movie-name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, movie.title), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, movie.year), __jsx(\"div\", {\n      className: \"main-content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"btn-container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/[id]/edit\",\n      as: \"/\".concat(movie._id, \"/edit\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    }, __jsx(\"button\", {\n      className: \"btn edit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \"Edit\")), __jsx(Link, {\n      href: \"/[id]\",\n      as: \"/\".concat(movie._id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }, __jsx(\"button\", {\n      className: \"btn view\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \"View\"))))));\n  }));\n};\n/* Retrieves pet(s) data from mongodb database */\n\n\n_c = Index;\nexport var __N_SSP = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/roberthawker/Desktop/moods/pages/index.js"],"names":["Link","Index","movies","map","movie","_id","poster","title","year"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,SACZ,4BACGA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD;AAAA,WACV;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BF,KAAK,CAACG,KAAlC,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIH,KAAK,CAACI,IAAV,CAHA,EAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,EAAE,aAAMJ,KAAK,CAACC,GAAZ,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,EAIE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAmB,MAAA,EAAE,aAAMD,KAAK,CAACC,GAAZ,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJF,CADF,CAJF,CADF,CADU;AAAA,GAAX,CADH,CADY;AAAA,CAAd;AAwBA;;;KAxBMJ,K;;AAuCN,eAAeA,KAAf","sourcesContent":["import Link from 'next/link'\nimport dbConnect from '../utils/dbConnect'\nimport Movie from '../models/Movie'\n\nconst Index = ({ movies }) => (\n  <>\n    {movies.map((movie) => (\n      <div key={movie._id}>\n        <div className=\"card\">\n        <img src={movie.poster} />\n        <h5 className=\"movie-name\">{movie.title}</h5>\n        <p>{movie.year}</p>\n          <div className=\"main-content\">\n            <div className=\"btn-container\">\n              <Link href=\"/[id]/edit\" as={`/${movie._id}/edit`}>\n                <button className=\"btn edit\">Edit</button>\n              </Link>\n              <Link href=\"/[id]\" as={`/${movie._id}`}>\n                <button className=\"btn view\">View</button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    ))}\n  </>\n)\n\n/* Retrieves pet(s) data from mongodb database */\nexport async function getServerSideProps() {\n  await dbConnect()\n\n  /* find all the data in our database */\n  const result = await Movie.find({})\n  const movies = result.map((doc) => {\n    const movie = doc.toObject()\n    movie._id = movies._id.toString()\n    return pet\n  })\n\n  return { props: { movies: movies } }\n}\n\nexport default Index\n"]},"metadata":{},"sourceType":"module"}