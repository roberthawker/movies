{"ast":null,"code":"import _regeneratorRuntime from \"/Users/roberthawker/Desktop/MovieMongoose 2/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/roberthawker/Desktop/MovieMongoose 2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/roberthawker/Desktop/MovieMongoose 2/pages/[id]/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\n/* Allows you to view pet card info and delete pet card*/\nvar MoviePage = function MoviePage(_ref) {\n  _s();\n\n  var movie = _ref.movie;\n  var router = useRouter();\n\n  var _useState = useState(''),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var movieID;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              movieID = router.query.id;\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"/api/movies/\".concat(movieID), {\n                method: 'Delete'\n              });\n\n            case 4:\n              router.push('/');\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              setMessage('Failed to delete the movie.');\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n\n    return function handleDelete() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    key: movie._id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"card\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: movie.poster,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), __jsx(\"h5\", {\n    className: \"movie-name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, movie.title), __jsx(\"div\", {\n    className: \"main-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"btn-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/[id]/edit\",\n    as: \"/\".concat(movie._id, \"/edit\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"btn edit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Edit\")), __jsx(\"button\", {\n    className: \"btn delete\",\n    onClick: handleDelete,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Delete\")))), message && __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, message));\n};\n\n_s(MoviePage, \"yha2Cnt8BZfMf3P0rpE2Zd8Ea6g=\", false, function () {\n  return [useRouter];\n});\n\n_c = MoviePage;\nexport var __N_SSP = true;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"sources":["/Users/roberthawker/Desktop/MovieMongoose 2/pages/[id]/index.js"],"names":["useState","useRouter","Link","MoviePage","movie","router","message","setMessage","handleDelete","movieID","query","id","fetch","method","push","_id","poster","title"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAIA;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAe;AAAA;;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC/B,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AAD+B,kBAEDD,QAAQ,CAAC,EAAD,CAFP;AAAA,MAExBM,OAFwB;AAAA,MAEfC,UAFe;;AAG/B,MAAMC,YAAY;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,cAAAA,OADa,GACHJ,MAAM,CAACK,KAAP,CAAaC,EADV;AAAA;AAAA;AAAA,qBAIXC,KAAK,uBAAgBH,OAAhB,GAA2B;AACpCI,gBAAAA,MAAM,EAAE;AAD4B,eAA3B,CAJM;;AAAA;AAOjBR,cAAAA,MAAM,CAACS,IAAP,CAAY,GAAZ;AAPiB;AAAA;;AAAA;AAAA;AAAA;AASjBP,cAAAA,UAAU,CAAC,6BAAD,CAAV;;AATiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZC,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAaA,SACE;AAAK,IAAA,GAAG,EAAEJ,KAAK,CAACW,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEX,KAAK,CAACY,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BZ,KAAK,CAACa,KAAlC,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAwB,IAAA,EAAE,aAAMb,KAAK,CAACW,GAAZ,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,EAIE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEP,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,CAHF,CADF,EAeGF,OAAO,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAJ,CAfd,CADF;AAmBD,CAnCD;;GAAMH,S;UACWF,S;;;KADXE,S;;AA8CN,eAAeA,SAAf","sourcesContent":["import { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport Link from 'next/link'\nimport dbConnect from '../../utils/dbConnect'\nimport Movie from '../../models/Movie'\n\n/* Allows you to view pet card info and delete pet card*/\nconst MoviePage = ({ movie }) => {\n  const router = useRouter()\n  const [message, setMessage] = useState('')\n  const handleDelete = async () => {\n    const movieID = router.query.id\n\n    try {\n      await fetch(`/api/movies/${movieID}`, {\n        method: 'Delete',\n      })\n      router.push('/')\n    } catch (error) {\n      setMessage('Failed to delete the movie.')\n    }\n  }\n\n  return (\n    <div key={movie._id}>\n      <div className=\"card\">\n        <img src={movie.poster} />\n        <h5 className=\"movie-name\">{movie.title}</h5>\n        <div className=\"main-content\">\n          <div className=\"btn-container\">\n            <Link href=\"/[id]/edit\" as={`/${movie._id}/edit`}>\n              <button className=\"btn edit\">Edit</button>\n            </Link>\n            <button className=\"btn delete\" onClick={handleDelete}>\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n      {message && <p>{message}</p>}\n    </div>\n  )\n}\n\nexport async function getServerSideProps({ params }) {\n  await dbConnect()\n\n  const movie = await Movie.findById(params.id).lean()\n  movie._id = movie._id.toString()\n\n  return { props: { movie } }\n}\n\nexport default MoviePage\n"]},"metadata":{},"sourceType":"module"}